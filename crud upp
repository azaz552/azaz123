import tkinter as tk
from tkinter import ttk, messagebox
import sqlite3

# Database setup
conn = sqlite3.connect('contacts.db')
cursor = conn.cursor()
cursor.execute('''CREATE TABLE IF NOT EXISTS contacts (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    name TEXT,
                    email TEXT,
                    phone TEXT)''')
conn.commit()

def ajouter_contacts():
    name = entry_name.get()
    phone = entry_phone.get()
    email = entry_email.get()

    if name and email and phone:
        cursor.execute("INSERT INTO contacts (name, email, phone) VALUES (?, ?, ?)", (name, email, phone))
        conn.commit()
        afficher_contacts()
        clear_entries()
    else:
        messagebox.showwarning("Champs manquants", "Veuillez remplir tous les champs")

def mettre_a_jour_contacts():
    try:
        selected_item = tree.selection()[0]
        contact_id = tree.item(selected_item)['values'][0]
        name = entry_name.get()
        phone = entry_phone.get()
        email = entry_email.get()

        if name and email and phone:
            cursor.execute("UPDATE contacts SET name=?, email=?, phone=? WHERE id=?", 
                           (name, email, phone, contact_id))
            conn.commit()
            afficher_contacts()
            clear_entries()
        else:
            messagebox.showwarning("Champs manquants", "Veuillez remplir tous les champs")

    except IndexError:
        messagebox.showwarning("Aucune sélection", "Veuillez sélectionner un contact à mettre à jour")

def supprimer_contact():
    try:
        selected_item = tree.selection()[0]
        contact_id = tree.item(selected_item)['values'][0]
        cursor.execute("DELETE FROM contacts WHERE id=?", (contact_id,))
        conn.commit()
        afficher_contacts()
    except IndexError:
        messagebox.showwarning("Aucune sélection", "Veuillez sélectionner un contact à supprimer")

def afficher_contacts():
    for row in tree.get_children():
        tree.delete(row)
    cursor.execute("SELECT * FROM contacts")
    for contact in cursor.fetchall():
        tree.insert("", "end", values=contact)

def clear_entries():
    entry_name.delete(0, tk.END)
    entry_phone.delete(0, tk.END)
    entry_email.delete(0, tk.END)

root = tk.Tk()
root.title("Gestion du Contact")

tk.Label(root, text="Nom:").grid(row=0, column=0, padx=5, pady=5)
entry_name = tk.Entry(root)
entry_name.grid(row=0, column=1, padx=5, pady=5)

tk.Label(root, text="Téléphone:").grid(row=1, column=0, padx=5, pady=5)
entry_phone = tk.Entry(root)
entry_phone.grid(row=1, column=1, padx=5, pady=5)

tk.Label(root, text="Email:").grid(row=2, column=0, padx=5, pady=5)
entry_email = tk.Entry(root)
entry_email.grid(row=2, column=1, padx=5, pady=5)

tk.Button(root, text="Ajouter", command=ajouter_contacts).grid(row=3, column=0, padx=5, pady=5)
tk.Button(root, text="Mettre à jour", command=mettre_a_jour_contacts).grid(row=3, column=1, padx=5, pady=5)
tk.Button(root, text="Supprimer", command=supprimer_contact).grid(row=3, column=2, padx=5, pady=5)

columns = ("id", "name", "email", "phone")
tree = ttk.Treeview(root, columns=columns, show="headings")
for col in columns:
    tree.heading(col, text=col.capitalize())
    tree.column(col, anchor="center")
tree.grid(row=4, column=0, columnspan=3, padx=3, pady=5)

# Display contacts initially
afficher_contacts()

# Main loop
root.mainloop()
